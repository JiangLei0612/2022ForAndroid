<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white"
    android:orientation="vertical"
    >

    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@color/teal_200"
        >

        <TextView
            android:id="@+id/tv_back"
            android:layout_width="80dp"
            android:layout_height="45dp"
            android:text="返回"
            android:textSize="18sp"
            android:textColor="@color/white"
            android:gravity="center"
            android:layout_centerVertical="true"
            />

        <TextView
            android:id="@+id/tv_test"
            android:layout_width="80dp"
            android:layout_height="45dp"
            android:text="测试"
            android:textSize="18sp"
            android:textColor="@color/white"
            android:layout_centerVertical="true"
            android:layout_alignParentRight="true"
            android:gravity="center"
            />

    </RelativeLayout>
    <View
        android:layout_width="match_parent"
        android:layout_height="1dp"
        android:background="@color/white"
        />

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            >

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:minHeight="40dp"
                android:textStyle="bold"
                android:textSize="20sp"
                android:gravity="center_vertical"
                android:background="@color/teal_200"
                android:textColor="@color/white"
                android:text="Q1 ActivityManagerService是什么？什么时候初始化的？有什么作用？"
                android:paddingLeft="15dp"
                >

            </TextView>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="16sp"
                android:background="@color/white"
                android:paddingLeft="15dp"
                android:paddingRight="15dp"
                android:textColor="@color/black"
                android:textIsSelectable="true"
                android:text="ActivityManagerService的定义：ActivityManagerService，简称AMS，服务端对象，负责系统中所有Activity的生命周期
                \n
                \n初始化过程：1 在SystemServer的startBootstrapService()中调用ActivityManagerService静态内部类Lifecycle的startService()方法。
                \n2 ActivityManagerService.Lifecycle.startService()最终通过SystemServiceManager.startService()方法创建ActivityManagerService.Lifecycle实例，并调用它的onStart()方法。
                \n3 在创建ActivityManagerService.Lifecycle实例时会创建ActivityManagerService对象；在调用ActivityManagerService.Lifecycle.onStart()方法时会调用ActivityManagerService.start()方法。
                \n
                \n功能：AMS在Android系统中扮演很重要的角色，主要负责系统中四大组件的启动、切换、调度及应用进程的管理和调度等工作，其职责与操作系统中的进程管理和调度模块相类似。当发起进程启动或者组件启动时，都会通过Binder通信机制将请求传递给AMS，AMS再做统一处理。"
                >
            </TextView>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:minHeight="40dp"
                android:textStyle="bold"
                android:textSize="20sp"
                android:gravity="center_vertical"
                android:background="@color/teal_200"
                android:textColor="@color/white"
                android:text="Q2 ActivityThread是什么?ApplicationThread是什么?他们的区别"
                android:paddingLeft="15dp"
                >

            </TextView>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="16sp"
                android:background="@color/white"
                android:paddingLeft="15dp"
                android:paddingRight="15dp"
                android:textColor="@color/black"
                android:textIsSelectable="true"
                android:text="ActivityThread:ActivityThread类代表的就是Android应用程序进程中的主线程，注意它代表主线程而不是说它就是一个Thread线程类，因为系统在创建完一个新应用程序进程后，会在这个进程的主线程中调用ActivityThread类的main函数来初始化这个进程，在这个main函数里会执行一个loop的循环使当前主线程进入消息循环，所以我们称Android应用程序进程的入口函数是ActivityThread类的main函数，也就是说一个ActivityThread类对应于一个应用程序进程。
                \n
                \nApplicationThread:ApplicationThread是ActivityThread的内部类，也是一个Binder类型的对象，也就是说可以作为服务端实现跨进程通信。在应用进程中的ActivityThread通过Binder机制和系统进程中的AMS通信时，使用的就是ApplicationThread对象来作为应用进程的服务端，接收AMS的指令并将指令发送给ActivityThread执行，所以它是ActivityThread
与AMS跨进程通信的桥梁。因为ApplicationThread对象会被Binder线程调用，而ActivityThread是运行在主线程中的，所以ApplicationThread会通过mH对象发送消息给主线处理。"
                >
            </TextView>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:minHeight="40dp"
                android:textStyle="bold"
                android:textSize="20sp"
                android:gravity="center_vertical"
                android:background="@color/teal_200"
                android:textColor="@color/white"
                android:text="Q3 Instrumentation是什么?和ActivityThread是什么关系?"
                android:paddingLeft="15dp"
                >

            </TextView>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="16sp"
                android:background="@color/white"
                android:paddingLeft="15dp"
                android:paddingRight="15dp"
                android:textColor="@color/black"
                android:textIsSelectable="true"
                android:text="Instrumentation类里面的方法大多数和Application和Activity有关，这个类就是完成对Application和Activity初始化和生命周期的工具类
                \n
                \n每个Activity都持有Instrumentation对象的一个引用，但是整个进程只会存在一个Instrumentation对象。ActivityTread(UI线程)是提供外部调用的，内部的调用是由Instrumentation负责的。"
                >
            </TextView>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:minHeight="40dp"
                android:textStyle="bold"
                android:textSize="20sp"
                android:gravity="center_vertical"
                android:background="@color/teal_200"
                android:textColor="@color/white"
                android:text="Q4 ActivityThread和AMS通信模型"
                android:paddingLeft="15dp"
                >

            </TextView>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="16sp"
                android:background="@color/white"
                android:paddingLeft="15dp"
                android:paddingRight="15dp"
                android:textColor="@color/black"
                android:textIsSelectable="true"
                android:text="1 ActivityManagerService运行在system_server进程中的，它是一个继承于ActivityManagerNative的Binder本地对象，提供具体的服务， ActivityManagerProxy对象是ActivityManagerService在普通应用进程的一个Binder代理对象，应用进程通过ActivityManagerProxy对象远程调用ActivityManagerService提供的功能
                \n
                \n2 ApplicationThread对象运行在普通应用进程中的，它是一个继承自 ApplicationThreadNative的Binder本地对象，提供具体的服务，ApplicationThreadProxy对象是ApplicationThread对象在system_server进程中的Binder代理对象，ActivityManagerService通过ApplicationThreadProxy对象调用ApplicationThread提供的功能，而 ApplicationThread又会将请求发送给ActivityThread来做具体的事情。"
                >
            </TextView>

            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:paddingLeft="15dp"
                android:paddingRight="15dp"
                android:src="@drawable/activitythread_ams"
                android:adjustViewBounds="true"
                >

            </ImageView>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:minHeight="40dp"
                android:textStyle="bold"
                android:textSize="20sp"
                android:gravity="center_vertical"
                android:background="@color/teal_200"
                android:textColor="@color/white"
                android:text="Q5 ActivityRecord TaskRecord ActivityStack ActivityStackSupervisor"
                android:paddingLeft="15dp"
                >

            </TextView>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="16sp"
                android:background="@color/white"
                android:paddingLeft="15dp"
                android:paddingRight="15dp"
                android:textColor="@color/black"
                android:textIsSelectable="true"
                android:text="1 一个ActivityRecord对应一个Activity，保存了一个Activity的所有信息;但是一个Activity可能会有多个ActivityRecord,因为Activity可以被多次启动，这个主要取决于其启动模式。
                \n
                \n2 ActivityRecord中存在着大量的成员变量，包含了一个Activity的所有信息。ActivityRecord中的成员变量task表示其所在的TaskRecord，由此可以看出：ActivityRecord与TaskRecord建立了联系。
                \n
                \n3 TaskRecord内部维护一个ArrayList(ActivityRecord)用来保存ActivityRecord。TaskRecord中的mStack表示其所在的ActivityStack。
                \n
                \n4 ActivityStack使用了一个ArrayList来保存TaskRecord。ActivityStack中还持有ActivityStackSupervisor对象，这个是用来管理ActivityStacks的。
                \n
                \n5 ActivityStackSupervisor是用来管理ActivityStack的。内部有两个不同的ActivityStack对象：mHomeStack、mFocusedStack，用来管理不同的任务。AMS初始化时会创建一个ActivityStackSupervisor对象。"
                >
            </TextView>



            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:paddingLeft="15dp"
                android:paddingRight="15dp"
                android:src="@drawable/activity_record"
                android:adjustViewBounds="true"
                >

            </ImageView>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:minHeight="40dp"
                android:textStyle="bold"
                android:textSize="20sp"
                android:gravity="center_vertical"
                android:background="@color/teal_200"
                android:textColor="@color/white"
                android:text="Q6 ActivityManager、ActivityManagerService、ActivityManagerNative、ActivityManagerProxy的关系"
                android:paddingLeft="15dp"
                >

            </TextView>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:textSize="16sp"
                android:background="@color/white"
                android:paddingLeft="15dp"
                android:paddingRight="15dp"
                android:textColor="@color/black"
                android:textIsSelectable="true"
                android:text=""
                >
            </TextView>

            <ImageView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:paddingLeft="15dp"
                android:paddingRight="15dp"
                android:src="@drawable/activitymanager"
                android:adjustViewBounds="true"
                >

            </ImageView>


        </LinearLayout>

    </ScrollView>

</LinearLayout>