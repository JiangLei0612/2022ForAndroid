<resources>
    <string name="app_name">2022面试</string>
    <string name="question_7">1. FLAG_ ACTIVITY_NEW_TASK             \n这个标记位的作用是指定Activity启动模式为”singleTask“，其作用等同于在AndroidManifest中指定android:launchMode=\"singleTask\"相同。             \n2. FLAG_ACTIVITY_SINGLE_TOP             \n这个标记位的作用是指定Activity启动模式为”singleTop“，其作用等同于在AndroidManifest中指定android:launchMode=\"singleTop\"相同。             \n3. FLAG_ACTIVITY_CLEAR_TOP             \n具有此标记位的Activity，当它启动的时候，在同一个任务栈中所有位于它上面的Activity都要出栈。这个模式一般需要和FLAG_ ACTIVITY_NEW_TASK配合使用，在这种情况下，如果调用的Activity的实例已存在，那么系统就会回调方法onNewIntent()。如果被启动的Activity采用的是standard，那么它连同它之上的Activity都要出栈，系统会重新创建Activity实例并放入栈顶。singleTask模式其实默认就具有此标记位的效果。             \n4. FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS             \n具有这个标记的Activity不会出现在历史Activity的列表中，当某些情况我们不希望用户通过历史列表回到我们这个Activity的时候，这个标记将起作用。它等同于在AndroidManifest中为Activity添加属性：android:excludeFromRecents=“true”</string>
    <string name="service_question_2">"             \n方法一:             \n利用onStartCommand方法中，返回START_STICKY。             \n方法二:             \nAndroidMainifest中通过android：priority提升Service优先级，在AndroidMainfest.xml文件中对于intent-filter可以通过android:priority=\"1000\"这个属性设置最高优先级，1000是最高值，如果数字越小则优先级越低，同时适用广播。             \n方法三:             \nonDestroy方法里重启Service             \nservice+broadcast方式，就是当Service调用onDestory的时候，发送一个自定义的广播，当收到广播的时候，重新启动service；或者startService()重新打开服务。             \n方法四:             \n使用startForeground将service放到前台状态，提升service进程优先级，Android进程是托管的，但系统进程空间紧张的时候，就会按照优先级自动进行进程的回收。Android将进程分为6个等级，它们按优先级顺序高到低依次是：前台进程，可见进程，服务进程，后台进程，空进程。"</string>
</resources>